[{"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\index.js":"1","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\App.js":"2","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\context\\ThemeContext.js":"3","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Footer\\Footer.js":"4","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Landing\\Landing.js":"5","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Navigation\\NavBar\\NavBar.js":"6","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\Main.js":"7","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Navigation\\NavSocial\\NavSocial.js":"8","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\Article.js":"9","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Navigation\\NavLinks\\NavLinks.js":"10","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Navigation\\ThemeToggle\\ThemeToggle.js":"11","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Utilities\\Button.js":"12","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Navigation\\MobileNav\\MobileNav.js":"13","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\Portfolio\\ProjectContainer.js":"14","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\About\\Technologies.js":"15","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\Contact\\ContactForm.js":"16","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\About\\Languages.js":"17","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\Portfolio\\ProjectItem.js":"18","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\About\\Tools.js":"19"},{"size":774,"mtime":1683525170228,"results":"20","hashOfConfig":"21"},{"size":1703,"mtime":1683525170272,"results":"22","hashOfConfig":"21"},{"size":591,"mtime":1683525170272,"results":"23","hashOfConfig":"21"},{"size":1825,"mtime":1683525170235,"results":"24","hashOfConfig":"21"},{"size":993,"mtime":1684325174284,"results":"25","hashOfConfig":"21"},{"size":2428,"mtime":1683525170272,"results":"26","hashOfConfig":"21"},{"size":1065,"mtime":1684324616512,"results":"27","hashOfConfig":"21"},{"size":1137,"mtime":1683525170267,"results":"28","hashOfConfig":"21"},{"size":1322,"mtime":1683525170240,"results":"29","hashOfConfig":"21"},{"size":643,"mtime":1683525170267,"results":"30","hashOfConfig":"21"},{"size":1109,"mtime":1683525170256,"results":"31","hashOfConfig":"21"},{"size":405,"mtime":1683525170232,"results":"32","hashOfConfig":"21"},{"size":5649,"mtime":1683525170264,"results":"33","hashOfConfig":"21"},{"size":3699,"mtime":1683525170252,"results":"34","hashOfConfig":"21"},{"size":1660,"mtime":1683525170242,"results":"35","hashOfConfig":"21"},{"size":6523,"mtime":1683525170250,"results":"36","hashOfConfig":"21"},{"size":970,"mtime":1683525170242,"results":"37","hashOfConfig":"21"},{"size":2602,"mtime":1683525170252,"results":"38","hashOfConfig":"21"},{"size":946,"mtime":1683525170246,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1sppnwu",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\index.js",[],["82","83"],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\App.js",["84"],"import './App.css';\r\nimport { useEffect, useContext } from 'react';\r\nimport { ThemeContext } from './context/ThemeContext';\r\nimport Landing from './Components/Landing/Landing';\r\nimport NavBar from './Components/Navigation/NavBar/NavBar';\r\nimport Main from './Components/Main/Main';\r\nimport Footer from './Components/Footer/Footer';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const { isLight } = useContext(ThemeContext);\r\n\r\n  const darkTheme = () => {\r\n    return (\r\n      (document.body.style.backgroundColor = 'rgba(15, 0, 46, 1)'),\r\n      (document.body.style.color = 'rgba(255, 255, 255, 0.87)')\r\n    );\r\n  };\r\n  const lightTheme = () => {\r\n    return (\r\n      (document.body.style.backgroundColor = null),\r\n      (document.body.style.color = null)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    return !isLight ? darkTheme() : lightTheme();\r\n  }, [isLight]);\r\n\r\n  library.add(fab, fas);\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <NavBar />\r\n        {/* <Route path='/' component={Landing} /> */}\r\n        <Landing />\r\n        <Main />\r\n        <Footer />\r\n        <ToastContainer\r\n          position='bottom-center'\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\context\\ThemeContext.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Landing\\Landing.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Navigation\\NavBar\\NavBar.js",["85"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\nimport NavLinks from \"../NavLinks/NavLinks\";\r\nimport NavSocial from \"../NavSocial/NavSocial\";\r\nimport ThemeToggle from \"../ThemeToggle/ThemeToggle\";\r\nimport MobileNav from \"../MobileNav/MobileNav\";\r\nimport styles from \"./NavBar.module.css\";\r\n\r\nconst NavBar = () => {\r\n  const [navScroll, setNavScroll] = useState(\"\");\r\n  const [mobileMenu, setMobileMenu] = useState(false);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  const { isLight } = useContext(ThemeContext);\r\n\r\n  // To set screen width for mobile menu and NavLinks\r\n  const handleResize = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n  // To set overflow hidden on body element when menu open to prevent scroll\r\n  const bodyScroll = () => {\r\n    mobileMenu === true\r\n      ? (document.body.style.overflow = \"hidden\")\r\n      : (document.body.style.overflow = null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    bodyScroll();\r\n  }, [mobileMenu]);\r\n\r\n  // To set state if NavBar grows\r\n  const scrollFunction = () => {\r\n    document.body.scrollTop > 80 || document.documentElement.scrollTop > 80\r\n      ? setNavScroll(\"scroll\")\r\n      : setNavScroll(\"\");\r\n  };\r\n  window.onscroll = () => {\r\n    scrollFunction();\r\n  };\r\n\r\n  // To set state if mobile menu is open\r\n  const handleSetMobileMenu = () => {\r\n    return !mobileMenu ? setMobileMenu(true) : setMobileMenu(false);\r\n  };\r\n\r\n  // Nav links\r\n  const navigationLinks = [\"About\", \"Portfolio\"];\r\n\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`${styles.navBar} ${styles[navScroll]} ${\r\n          !isLight && styles.dark\r\n        }`}\r\n      >\r\n        <ul>\r\n          {navigationLinks.map((links, index) => {\r\n            return (\r\n              <NavLinks\r\n                input={links}\r\n                navClass={\"navItem\"}\r\n                key={index}\r\n                isLight={isLight}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n        <ul>\r\n          <NavSocial socialClass={\"navSocial\"} socialIcons={\"socialIcons\"} />\r\n          <ThemeToggle />\r\n        </ul>\r\n      </nav>\r\n      <MobileNav\r\n        handleSetMobileMenu={handleSetMobileMenu}\r\n        menuOpen={mobileMenu}\r\n        width={width}\r\n        navigationLinks={navigationLinks}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\Main.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Navigation\\NavSocial\\NavSocial.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\Article.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Navigation\\NavLinks\\NavLinks.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Navigation\\ThemeToggle\\ThemeToggle.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Utilities\\Button.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Navigation\\MobileNav\\MobileNav.js",["86"],"import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\nimport NavLinks from \"../NavLinks/NavLinks\";\r\nimport NavSocial from \"../NavSocial/NavSocial\";\r\nimport ThemeToggle from \"../ThemeToggle/ThemeToggle\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport styles from \"./MobileNav.module.css\";\r\n\r\nconst MobileNav = ({\r\n    handleSetMobileMenu,\r\n    menuOpen,\r\n    width,\r\n    navigationLinks,\r\n}) => {\r\n    const { isLight } = useContext(ThemeContext);\r\n    const theme = !isLight ? styles.dark : \"\";\r\n    // Mobile menu animations\r\n    const mobileMenu = {\r\n        closed: {\r\n            opacity: 0,\r\n            x: width,\r\n            transition: {\r\n                duration: 0.5,\r\n                type: \"ease\",\r\n            },\r\n        },\r\n        open: {\r\n            opacity: 1,\r\n            x: 0,\r\n            transition: {\r\n                duration: 0.5,\r\n                type: \"ease\",\r\n            },\r\n        },\r\n    };\r\n\r\n    // Nav link animations\r\n    const menuItems = {\r\n        closed: {\r\n            y: -75,\r\n            opacity: 0,\r\n            transition: {\r\n                duration: 0.1,\r\n                type: \"ease\",\r\n            },\r\n        },\r\n        open: {\r\n            y: 0,\r\n            opacity: 1,\r\n            transition: {\r\n                duration: 0.5,\r\n                type: \"ease\",\r\n                delay: 0.3,\r\n            },\r\n        },\r\n    };\r\n\r\n    // Menu button icon animations\r\n    const menuIcons = {\r\n        open: {\r\n            opacity: 1,\r\n            transition: {\r\n                duration: 0.3,\r\n            },\r\n        },\r\n        closed: {\r\n            opacity: 0,\r\n            transition: {\r\n                duration: 0.3,\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <nav className={styles.nav}>\r\n            <div className={styles.mobileNav}>\r\n                <motion.div\r\n                    className={`${styles.mobileNavOverlayHidden} ${theme}`}\r\n                    variants={mobileMenu}\r\n                    inital={{ opacity: 0 }}\r\n                    animate={menuOpen ? \"open\" : \"closed\"}\r\n                    style={{ transform: `translateX(${width})` }}\r\n                >\r\n                    <ThemeToggle mobile={true} />\r\n                    <motion.ul\r\n                        className={styles.mobileNavOptions}\r\n                        variants={menuItems}\r\n                        inital={{ opacity: 0 }}\r\n                        animate={menuOpen ? \"open\" : \"closed\"}\r\n                    >\r\n                        {navigationLinks.map((links, index) => {\r\n                            return (\r\n                                <NavLinks\r\n                                    className={styles.mobileNavOverlayHidden}\r\n                                    handleSetMobileMenu={handleSetMobileMenu}\r\n                                    navClass={\"mobileMenuItem\"}\r\n                                    input={links}\r\n                                    width={width}\r\n                                    key={index}\r\n                                />\r\n                            );\r\n                        })}\r\n                        <ul\r\n                            className={styles.mobileNavOverlayHidden}\r\n                            variants={mobileMenu}\r\n                            inital={\"open\"}\r\n                            animate={menuOpen ? \"open\" : \"closed\"}\r\n                            className={styles.socialContainer}\r\n                        >\r\n                            <NavSocial\r\n                                socialClass={\"\"}\r\n                                socialIcons={\"mobileSocialIcons\"}\r\n                            />\r\n                        </ul>\r\n                    </motion.ul>\r\n                </motion.div>\r\n                <button\r\n                    className={styles.mobileMenu}\r\n                    onClick={() => handleSetMobileMenu()}\r\n                    aria-label=\"Toggle menu\"\r\n                    aria-controls=\"mobileNavOverlayHidden\"\r\n                >\r\n                    {menuOpen ? (\r\n                        <AnimatePresence>\r\n                            <motion.div\r\n                                key=\"times\"\r\n                                initial={{ opacity: 0 }}\r\n                                variants={menuIcons}\r\n                                animate=\"open\"\r\n                                exit=\"closed\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    icon={[\"fas\", \"times\"]}\r\n                                    className={styles.icon}\r\n                                />\r\n                            </motion.div>\r\n                        </AnimatePresence>\r\n                    ) : (\r\n                        <AnimatePresence>\r\n                            <motion.div\r\n                                key=\"bars\"\r\n                                initial={{ opacity: 0 }}\r\n                                variants={menuIcons}\r\n                                animate=\"open\"\r\n                                exit=\"closed\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    icon={[\"fas\", \"bars\"]}\r\n                                    className={styles.icon}\r\n                                />\r\n                            </motion.div>\r\n                        </AnimatePresence>\r\n                    )}\r\n                </button>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default MobileNav;\r\n","C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\Portfolio\\ProjectContainer.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\About\\Technologies.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\Contact\\ContactForm.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\About\\Languages.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\Portfolio\\ProjectItem.js",[],"C:\\Users\\dhita\\Desktop\\opensource\\portfolio\\plain_react\\src\\Components\\Main\\About\\Tools.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":12,"column":35,"nodeType":"93","messageId":"94","endLine":12,"endColumn":40},{"ruleId":"95","severity":1,"message":"96","line":30,"column":6,"nodeType":"97","endLine":30,"endColumn":18,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":110,"column":29,"nodeType":"101","messageId":"102","endLine":110,"endColumn":63},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bodyScroll'. Either include it or remove the dependency array.","ArrayExpression",["105"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [bodyScroll, mobileMenu]",{"range":"108","text":"109"},[1080,1092],"[bodyScroll, mobileMenu]"]